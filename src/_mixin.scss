@mixin _block-grid-offset() {
  margin: 0;
  box-sizing: border-box;
  padding: 0 ($flexy-block-grid-padding / 2) $flexy-block-grid-padding;
}

@mixin _block-grid-calc-legacy($row-num) {
  width: 100% / $row-num;

  &:nth-of-type(1n) {
    clear: none;
  }

  &:nth-of-type(#{$row-num}n + 1) {
    clear: both;
  }
}

@mixin _block_clearfix {
  *zoom: 1;

  &:before,
  &:after {
    display: table;
    content: '';
    line-height: 0;
  }

  &:after {
    clear: both;
  }
}

@mixin flexy-block-grid-legacy() {
  @include _block_clearfix;
  display: block;

  & > &__item {
    float: left;
  }

  @for $i from 1 through $flexy-block-grid-count {
    @each $namespace, $width in $flexy-breakpoints {
      @include flexy-breakpoint($namespace) {
        &_#{$namespace}_#{$i} > &__item {
          @include _block-grid-calc-legacy($i);
        }
      }
    }

    @if ($flexy-block-grid-use-devices) {
      @each $namespace, $params in $flexy-devices {
        @include flexy-device($namespace) {
          &_#{$namespace}_#{$i} > &__item {
            @include _block-grid-calc-legacy($i);
          }
        }
      }
    }
  }
}

@mixin flexy-block-grid-flex() {
  display: flex;
  flex-wrap: wrap;

  &_left {
    justify-content: flex-start;
  }

  &_center {
    justify-content: center;
  }

  &_space {
    justify-content: space-between;
  }

  &_right {
    justify-content: flex-end;
  }

  @for $i from 1 through $flexy-block-grid-count {
    & > &__item {
      &_fluid {
        width: auto;
        flex: 1 0 100% / $i;
      }
    }

    @each $name, $width in $flexy-breakpoints {
      &_#{$name}_#{$i} > &__item {
        @include flexy-breakpoint($name) {
          width: (100% / $i);
        }

        &_only {
          @include flexy-media(flexy-breakpoint-next-step($name)) {
            width: 100% / $i;
          }
        }
      }
    }

    @if ($flexy-block-grid-use-devices) {
      @each $namespace, $params in $flexy-devices {
        &_#{$namespace}_#{$i} > &__item {
          @include flexy-device($namespace) {
            width: (100% / $i);
          }
        }
      }
    }
  }
}

@mixin flexy-block-grid($legacy: false) {
  list-style: none;
  padding: 0;
  margin: 0 (-$flexy-block-grid-padding/2);

  & > &__item {
    display: block;
    height: auto;
    @include _block-grid-offset;
  }

  @if ($legacy) {
    @include flexy-block-grid-legacy;
  } @else {
    @include flexy-block-grid-flex;
  }
}
